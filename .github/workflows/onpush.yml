name: pipeline
on: [push]
jobs:
  test:
    name: Integration pipeline
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: |
          export PATH=$PATH:/tmp;
          wget -qO - "https://github.com/go-task/task/releases/download/v2.2.1/task_linux_amd64.tar.gz" | tar zxf - -C /tmp task;
          ls -la /tmp/task;
          task --version;
          wget -qO - https://codeclimate.com/downloads/test-reporter/test-reporter-0.10.4-linux-amd64 > /tmp/cc-test-reporter;
          chmod +x /tmp/cc-test-reporter;
          ls -la /tmp/cc-test-reporter;
          cc-test-reporter -v;
      - name: Test
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: |
          export PATH=$PATH:/tmp;
          cc-test-reporter before-build;
          task test;
          cc-test-reporter after-build -t gocov --exit-code $? -p github.com/antonmarin/secret-yaml;
      - name: Report coverage
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          go install github.com/mattn/goveralls@latest;
          goveralls -coverprofile=c.out -service=github;
  release-linux:
    name: Release app for linux
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: |
          export PATH=$PATH:/tmp;
          wget -qO - "https://github.com/go-task/task/releases/download/v2.2.1/task_linux_amd64.tar.gz" | tar zxf - -C /tmp task;
          ls -la /tmp/task;
          task --version;
      - name: Build binary files
        run: |
          export PATH=$PATH:/tmp;
          BINARY_PATH="release/syml" CGO_ENABLED=0 GOOS=linux GOARCH=amd64 task compile;
          ls release/;
      - name: Release
        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/syml-linux
          draft: true
  release-macos:
    name: Release app for macos
    runs-on: macos-12
    needs:
      - test
    steps:
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup
        run: |
          export PATH=$PATH:/tmp;
          wget -qO - "https://github.com/go-task/task/releases/download/v2.2.1/task_darwin_amd64.tar.gz" | tar zxf - -C /tmp task;
          ls -la /tmp/task;
          task --version;
      - name: Build binary files
        run: |
          export PATH=$PATH:/tmp;
          BINARY_PATH="release/syml" CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 task compile;
          ls release/;
      - name: Release
        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release/syml-darwin
          draft: true
